# Stage 1: Build openvpn-ui app
FROM golang:1.23.0-bookworm AS app_builder
ENV WORK_DIR=$GOPATH/src/github.com/shuricksumy/openvpn-ui
ENV CGO_ENABLED=1
#ENV CGO_CFLAGS="-D_LARGEFILE64_SOURCE"
WORKDIR $WORK_DIR
RUN git clone https://github.com/shuricksumy/openvpn-ui.git . --depth 1 --branch v5.6
RUN apt-get update && apt-get install build-essential -y
RUN go install github.com/beego/bee/v2@latest && bee update
RUN go mod tidy && go mod vendor && bee pack bee pack  \
    -exr='^vendor|^data.db|^build|^README.md|^docs|^README_ORIGINAL.md|^screenshots|^pkg|^bin|^dist|^Taskfile|^example|^swagger|^docker-compose|^Dockerfile|^SECURITY.md'
RUN ls -lah $WORK_DIR

# Stage 2: Build OpenVPN server
FROM debian:stable AS openvpn 

RUN <<-"EOT" bash -ex
    APT_LISTCHANGES_FRONTEND=none
    DEBIAN_FRONTEND=noninteractive
    apt-get update -q
    apt-get dist-upgrade -qy
    apt-get install -qqy --no-install-suggests --no-install-recommends \
        ca-certificates \
        curl \
        iptables \
        iproute2 \
        moreutils \
        nano \
        openssl \
        systemd-sysv \
        inetutils-ping \
        dnsutils \
        bzip2 \
        jq \
        oathtool \
        sqlite3 \
        procps \
        wget
    apt-get clean
    rm -frv /var/lib/apt/lists/*
EOT

RUN <<-"EOT" bash -ex
    OPENVPN_VER=2.6.12
    LIBS="libnl-genl-3-dev libssl-dev libcap-ng-dev liblz4-dev libsystemd-dev"
    LIBS_TEMP="git build-essential pkg-config gcc cmake make"
    apt-get update
    apt-get install -y $LIBS $LIBS_TEMP
    mkdir -p /opt/openvpn_install && cd /opt/openvpn_install
    wget "https://raw.githubusercontent.com/Tunnelblick/Tunnelblick/master/third_party/sources/openvpn/openvpn-$OPENVPN_VER/openvpn-$OPENVPN_VER.tar.gz"
    tar xvf "openvpn-$OPENVPN_VER.tar.gz"
    cd "openvpn-$OPENVPN_VER"
    #
    patches=(
        "02-tunnelblick-openvpn_xorpatch-a.diff"
        "03-tunnelblick-openvpn_xorpatch-b.diff"
        "04-tunnelblick-openvpn_xorpatch-c.diff"
        "05-tunnelblick-openvpn_xorpatch-d.diff"
        "06-tunnelblick-openvpn_xorpatch-e.diff"
    )

    for patch in "${patches[@]}"; do
        wget "https://raw.githubusercontent.com/Tunnelblick/Tunnelblick/master/third_party/sources/openvpn/openvpn-$OPENVPN_VER/patches/$patch"
        git apply "$patch"
    done
    # Patch to overcome DPI start (works only for UDP connections, taken from https://github.com/GubernievS/AntiZapret-VPN/blob/main/setup/root/patch-openvpn.sh
    sed -i '/link_socket_write_udp(struct link_socket \*sock/,/\/\* write a TCP or UDP packet to link \*\//c\
    link_socket_write_udp(struct link_socket *sock,\
    					struct buffer *buf,\
    					struct link_socket_actual *to)\
    {\
    	uint16_t stuffing_sent = 0;\
    	uint8_t opcode = *BPTR(buf) >> 3;\
    if (opcode == 7 || opcode == 8 || opcode == 10)\
    {\
    	srand(time(NULL));\
    	for (int i=0; i<2; i++) {\
    		int stuffing_len = rand() % 91 + 10;\
    		uint8_t stuffing_data[100];\
    		for (int j=0; j<stuffing_len; j++) {\
    			stuffing_data[j] = rand() % 256;\
    		}\
    		struct buffer stuffing_buf = alloc_buf(100);\
    		buf_write(&stuffing_buf, stuffing_data, stuffing_len);\
    		for (int j=0; j<100; j++) {\
    #ifdef _WIN32\
    			stuffing_sent =+ link_socket_write_win32(sock, &stuffing_buf, to);\
    #else\
    			stuffing_sent =+ link_socket_write_udp_posix(sock, &stuffing_buf, to);\
    #endif\
    		}\
    		free_buf(&stuffing_buf);\
    	}\
    }\
    #ifdef _WIN32\
    	stuffing_sent =+ link_socket_write_win32(sock, buf, to);\
    #else\
    	stuffing_sent =+ link_socket_write_udp_posix(sock, buf, to);\
    #endif\
    	return stuffing_sent;\
    }\
    \
    \/\* write a TCP or UDP packet to link \*\/' "/opt/openvpn_install/openvpn-$OPENVPN_VER/src/openvpn/socket.h"
    # Patch to overcome DPI end

    ./configure --enable-static=yes --enable-shared  --enable-systemd=yes --disable-lzo --disable-debug --disable-plugin-auth-pam --disable-dependency-tracking
    make -j$(nproc)
    make install

    cd /root
    rm -rf /opt/openvpn_install/
    apt-get purge -y $LIBS_TEMP
    apt-get autoremove -y && apt-get clean -y
EOT

COPY --from=app_builder /go/src/github.com/shuricksumy/openvpn-ui/openvpn-ui.tar.gz /opt/openvpn-gui/openvpn-ui.tar.gz
COPY ./openvpn/start.sh /opt/start.sh
COPY ./openvpn/scripts /opt/scripts

RUN bash -c '/opt/scripts/install_pkg.sh'

RUN apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

RUN tar -zxf /opt/openvpn-gui/openvpn-ui.tar.gz --directory /opt/openvpn-gui/
RUN rm -f /opt/openvpn-gui/openvpn-ui.tar.gz
RUN rm -f /opt/openvpn-gui/data.db

#ADD BUILD NUMBER
RUN date +"%d%m%Y-%H%M%S" > /opt/openvpn-gui/static/build.txt

VOLUME /etc/openvpn
VOLUME /opt/openvpn-gui/db

#CLOAK
ADD https://github.com/cbeuw/Cloak/releases/download/v2.9.0/ck-server-linux-amd64-v2.9.0 /opt/cloak/ck-server
RUN chmod +x /opt/cloak/ck-server

# Advise to open necassary ports
EXPOSE 1194/udp 8080/tcp
WORKDIR /etc/openvpn/easy-rsa

ENTRYPOINT ["/bin/bash", "/opt/start.sh"]